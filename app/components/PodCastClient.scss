@import 'sass/variables.scss';

html {
	/* enable for debugging safe area */
	/* --ion-safe-area-top: 30px !important; */
}
:root {
	/*****
	* This is so we can read the variables from javascript.
	*****/
    --safeAreaTop: env(safe-area-inset-top);
    --safeAreaRight: env(safe-area-inset-right);
    --safeAreaBottom: env(safe-area-inset-bottom);
    --safeAreaLeft: env(safe-area-inset-left);

	/*******************************************
	* Podfriend theme
	*******************************************/
	--review-stars-color-five: #78bf70;
	--review-stars-color-four: #9eda97;
	--review-stars-color-three: #f8c86a;
	--review-stars-color-two: #f79e67;
	--review-stars-color-one: #ed5656;

	--primary-color: #0176e5;
	--primary-color-light: #1487f4;
	--primary-color-dark: #0065c5;

	--secondary-color: #4c749a;
	--secondary-color-light: #3474b1;
	--secondary-color-dark: #25537f;

	--danger-color: #b13435;
	--danger-color-light: #c43a44;
	--danger-color-dark: #942c2d;

	--success-color: #29bd73;
	--success-color-light: #2ddd85;
	--success-color-dark: #229c5f;


	--primary-text-color: #000000;
	--primary-header-text-color: #FFFFFF;
	--secondary-text-color: #75757e;
}

reach-portal div[data-rsbs-header="true"] h1 {
	margin: 0px;
	margin-top: 5px;
	padding: 0px;
	color: #000000;
}

html, body {
	margin: 0px;
	padding: 0px;
	height: 100%;

	overflow: hidden;
}
h2 {
	color: #000000;
	margin: 0px;
	padding: 0px;
	margin-bottom: 20px;
}
/* input[type=submit], input[type=text], input[type=email], input[type=password], textarea {
 let's see if the below is enough	
*/
input, textarea {
	&:not(input[type=checkbox]) {
		-webkit-user-select: text;
		user-select: text;
		-webkit-appearance: none;
	}
}
input[type=checkbox] {
	-webkit-appearance: auto;
}
:global(.themeDark) {
	
}
:global(#root) {
	height: 100%;
	overflow: hidden;
}
* {
	touch-action: manipulation;
	
	/* font-family: 'Roboto';*/
	font-family: Roboto, -apple-system,BlinkMacSystemFont,"Helvetica Neue","Roboto",sans-serif;
	/* font-weight: 400;*/

	/* color: var(--secondary-text-color); */
	box-sizing: border-box;

	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
	-webkit-user-drag: none;
	user-drag: none;
	-webkit-touch-callout: none;
}
p {
	color: var(--secondary-text-color);
}
.top {
	display: flex;
	flex: 2;
	overflow: hidden;
	
}
.mainArea {
	flex: 2;
	max-width: 100%;
	overflow-x: hidden;
	overflow-y: hidden;
	box-shadow: -4px 3px 8px 1px rgba(0,0,0,0.35);
	border-radius: 20px 0px 0px 0px;
	
	background-color: var(--primary-color);

	filter: blur(0px); /* hack for chrome to make backdrop-filter and scrolling work on childs */

	/*
	max-height: calc(100% - 90px);
	@media only screen and (max-width: 570px) {
		max-height: calc(100% - 60px);
	}
	*/
}


:global {
	/*
	.header-ios {
		background: var(--ion-color-primary) !important;
	}
	*/
	ion-modal .ion-page {
		height: 100%;

		ion-item {
			a {
				text-decoration: none;
				color: #000000;
			}
			svg {
				margin-right: 10px;
			}
		}
	}
	#root .ion-page {
		flex: 1;
		
		height: calc(100% - 135px);
		@media only screen and (max-width: 899px) {
			height: calc(100% - 134px);
		}
		@media only screen and (max-width: 570px) {
			height: calc(100% - 104px);
		}

		ion-content {
			--background: var(--primary-color);
		}
		ion-title {
			--color: var(--primary-header-text-color);
		}
		ion-title.title-large {
			text-overflow: unset;
			white-space: unset;
		}
		ion-toolbar {
			--background: var(--primary-color);
			background-color: var(--primary-color);

			color: #FFFFFF;
			--border-width: 0 !important;

			--padding-bottom: 0px;

			ion-button {
				--color: var(--primary-header-text-color);
			}
			ion-back-button {
				--color: var(--primary-header-text-color);
				--padding-start: 8px;
			}
		}

		&.no-header-padding {
			ion-toolbar {
				/*
				padding-top: 0px;
				--padding-top: 0px;
				*/
				--padding-start: 0px;
				--padding-end: 0px;
				--padding-bottom: 0px;
			}
		}

		/*
		height: calc(100% - 90px);

		@media only screen and (max-width: 899px) {
			height: calc(100% - 134px);
		}

		@media only screen and (max-width: 570px) {
			height: calc(100% - 104px);
		}
		*/
		/*
		*::-webkit-scrollbar {
			width: 12px;
			background-color: var(--primary-color);
		}
		*::-webkit-scrollbar-thumb {
			background: #02489d;
			height: 20%;
			border-radius: 15px;
		}
		*::-webkit-scrollbar-track {
			background: transparent;
			display: none;
		}
		*/
	}
	#root .ion-page.sectionPage {
		@supports(padding-top:env(safe-area-inset-top)) {
			padding-top: env(safe-area-inset-top);

			ion-header ion-toolbar:first-of-type {
				padding-top: 0px;
			}
		}
	}

	#root .ion-page.home {
		background-color: var(--primary-color);

		height: calc(100% - 90px);

		ion-content {
			--background: var(--primary-color);
		}
		ion-header {
			/* background-color: #174ea1 !important; */
			background-color: --primary-color !important;
			color: #FFFFFF;

			@media (any-hover: hover) {
				max-width: calc(100% - 17px);
			}

			ion-searchbar {
				--background: rgba(0,0,0,0.15);
				--placeholder-color: rgba(255,255,255,0.60);
				--color: #FFFFFF;
				--cancel-button-color: #FFFFFF;
				--clear-button-color: #FFFFFF;
				--icon-color: rgba(255,255,255,0.60);
			}
			ion-back-button {
				color: #FFFFFF;
			}
			ion-title {
				display: flex;
				justify-content: center;
				align-items: center;
				padding-bottom: 5px;
			}
			ion-segment {
				--background: var(--primary-color);

				ion-segment-button {
					--color: rgba(255,255,255,0.7);
					--color-hover: rgba(255,255,255,0.9);
					--border-width: 0;
					--background: transparent;
					--color-checked: #ffffff;
					--indicator-height: 3px;
					--background-hover-opacity: 0;
					--ripple-color: transparent;

					&::part(indicator-background) {
						border-radius: 3px 3px 0px 0px;
					}
				}
			}
		}
		@media only screen and (min-width: 900px) {
			.titleToolbar {
				display: none;
			}
			.searchToolbar {
				display: none;
			}
		}
	}
	.podfriendModal {
		p {
			a {
				color: var(--primary-color-dark);
			}
		}
		h4 {
			margin: 0px;
			margin-top: 30px;
			padding: 0px;
			font-size: 22px;
			color: #0e3b80;
		}
	}
	.timestampLink {
		color: var(--primary-color-dark);
	}
	@media (any-hover: hover) {
		/*
		.podcastPage::-webkit-scrollbar {
			width: 12px;
			background-color: var(--primary-color);
		}
		.podcastPage::-webkit-scrollbar-thumb {
			background: #02489d;
			height: 20%;
			border-radius: 15px;
		}
		.podcastPage::-webkit-scrollbar-track {
			background: transparent;
			display: none;
		}
		*/
	}
}
/*
.mainArea::-webkit-scrollbar-track-piece:start {
    background: transparent url('./../images/transparent.png') repeat-y !important;
}

.mainArea::-webkit-scrollbar-track-piece:end {
    background: transparent url('./../images/transparent.png') repeat-y !important;
}
*/
.podCastClient {
	display: flex;
	height: 100%;
	overflow: hidden;
	flex-direction: column;
}
/*************************************
* Loading indicators
*************************************/
@keyframes placeHolderShimmer {
    0%{
        background-position: -468px 0
    }
    100%{
        background-position: 468px 0
    }
}
:global(.loading-line) {
    animation-duration: 1s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-name: placeHolderShimmer;
    animation-timing-function: linear;
    background: #f6f7f8;
    background: linear-gradient(to right, rgba(0,0,0,0.1) 8%, rgba(0,0,0,0.05) 18%, rgba(0,0,0,0.1) 33%);
    background-size: 800px 104px;
    height: 18px;
}
:global(.loading-line-very-short) {
	width: 150px;
	margin-bottom: 7px;
}
:global(.loading-line-short) {
	width: 300px;
	margin-bottom: 7px;
}
:global(.loading-line-mid) {
	width: 400px;
	margin-bottom: 7px;
}
:global(.loading-line-long) {
	width: 500px;
	margin-bottom: 7px;
}
:global(.loading-episode) {
	width: 100%;
	height: 120px;
	margin-bottom: 10px;
}
:global(.loading-cover) {
	width: 19vw;
	height: 19vw;
	margin-left: 30px;
	margin-top: 30px;
}
:global(.loading-podcast) {
	height: 10vw;
	margin-bottom: 10px;
	margin-left: 30px;
	margin-right: 30px;
}


/*******************************************
* Global Podfriend styles
********************************************/
:root {
	
}
:global {
	/****
	* To make our own player in open mode play nice with react-spring-bottom-sheet
	****/
	div[data-rsbs-backdrop="true"] {
		z-Index: 10000;
	}
	div[data-rsbs-overlay="true"] {
		z-Index: 10001;
	}
	div[data-rsbs-root]:after {
		z-Index: 10000;
	}
}
/****
* Overrides to Material UI
****/
:global {
	.MuiAlert-message {
		padding: 10px 0 !important;
	}
}
:global {
	.podcastPage {
		overflow-y: auto;

		height: calc(100% - 90px);
	}
	@media only screen and (max-width: 570px) {
		.podcastPage {
			height: calc(100% - 60px);
		}
	}
	.contentPage, .landingPage {
		h1 {
			font-family: -apple-system,BlinkMacSystemFont,"Helvetica Neue","Roboto",sans-serif;
			margin: 0px;
			font-weight: bold;
			font-size: 34px;
		}
	}
	.landingPage {
		background-color: var(--primary-color);

		.hero {
			/* background-color: rgba(255,195,0,0.5); */
			background-color: var(--primary-color);
			padding: 40px;
		}
		.hero * {
			/* color: rgb(27, 27, 33); */
			color: #FFFFFF;
		}
		p {
			line-height: 28px;
		}
		.pageContent {
			padding-top: 40px;
			padding-bottom: 300px;
			background-color: #FFFFFF;
		}
	}
	.contentPage {
		background-color: #FFFFFF;
		
	}
	/******************************
	* Alerts
	******************************/
	.errorMessage {
		background-color: #d72828;
		color: #FFFFFF;
		padding: 10px;
	}
	.warningMessage {
		background-color: #ffbb00;
		color: #FFFFFF;
		padding: 10px;
	}

	.fullWidth {
		width: 100%;
	}
		.podfriendButton {
			background-color: var(--primary-color);
			border: 0px;
			border-bottom: 4px solid var(--primary-color-dark);
			padding: 15px;
			color: #FFFFFF;
			font-size: 16px;
			transition: background-color .2s;
			border-radius: 10px;
			text-align: center;
			overflow: hidden;
		}
		.multiAction {
			padding: 0px;
			display: flex;

			.buttonPrimaryAction {
				padding: 15px;
				flex: 1;
				color: #FFFFFF;

				display: flex;

				justify-content: center;
				align-items: center;

				svg {
					max-width: 24px;
					max-height: 24px;
				}
			}
			.buttonSecondaryAction {
				background-color: rgba(0,0,0,0.1);
				display: flex;
				justify-content: center;
				align-items: center;

				padding-left: 10px;
				padding-right: 10px;

				svg {
					margin-right: 0px;

					max-width: 24px;
					max-height: 24px;
				}
			}
		}
		.podfriendButton:active {
			background-color: var(--primary-color-light);
			border-width: 0 !important;
			margin-bottom: 4px;
			transform: translate3d(0,4px,0) !important;
		}
		.boostButton, .podfriendButton.success {
			background-color: var(--success-color);
			border-bottom: 4px solid var(--success-color-dark);
		}
		.boostButton:active, .podfriendButton.success:active {
			background-color: var(--success-color-light);
		}
		.secondaryButton {
			background-color: var(--secondary-color);
			border-bottom: 4px solid var(--secondary-color-dark);
		}
		.secondaryButton:active {
			background-color: var(--secondary-color-light);
		}
		.dangerousButton {
			background-color: var(--danger-color);
			border-bottom: 4px solid var(--danger-color-dark);
		}
		.dangerousButton:active {
			background-color: var(--danger-color-light);
		}
		.pendingAction {
			opacity: 0.8;
			pointer-events: none;

			svg {
				display: inline !important;
			}
		}
		@media (any-hover: hover) {
			.podfriendButton:hover, .podfriendButton.active:hover {
				background-color: var(--primary-color-light);
				
				color: #FFFFFF;
			}
			.podfriendButton.nonActive:hover {
				background-color: #EEEEEE;
				
				color: #999999 !important;
			}
			.podfriendButton:hover > span, .podfriendButton:hover > span > span {
				color: #FFFFFF;
			}
			.boostButton:hover, .podfriendButton.success:hover {
				background-color: var(--success-color-light);
			}
			.secondaryButton:hover {
				background-color: var(--secondary-color-light);
			}
			.dangerousButton:hover {
				background-color: var(--danger-color-light);
			}
		}
		.podfriendButton svg {
			max-height: 16px;
			max-width: 16px;
			fill: #FFFFFF;
			margin-right: 10px;
			transition: all 0.5s;
			position: relative;
			top: 2px;
		}
		.podfriendButton.active {
			background-color: var(--primary-color);
			border-bottom: 4px solid var(--primary-color-dark);
			color: #FFFFFF;
		}

	.podcastCover {
		box-shadow: 0px 0px 39px -12px rgba(0,0,0,0.75);
		border-radius: 15px;
		/* border: 3px solid #FFFFFF; */
		background-color: #c5d5e5;
		display: flex;
		justify-content: center;
		align-items: center;
	}
	.podcastCover.noBorder {
		border: 0px;
		border-radius: 0px;
		background-color: transparent;
		box-shadow: none;
		filter: drop-shadow(0px 0px 19px rgba(0,0,0,0.75));
	}
	.loadingIndicator {
		max-width: 90%;
	}

	.section {
		position: relative;
		background-color: #f0f0f0;

		&:nth-of-type(odd){
			background-color: #FFFFFF;
		}

		border-bottom: 1px solid #d5d5d5;

		.sectionInner {
			padding-top: 15px;
			padding-left: 15px;

			@media (min-width: 550px) {
				display: block;
			}
		}
		.sectionBody {
			font-size: 16px;
			color: #081b3b;
			display: -webkit-box;
			-webkit-line-clamp: 6;
			-webkit-box-orient: vertical;

			line-height: 24px;

			overflow: hidden;
			margin-bottom: 15px;
			margin-top: 15px;

			max-width: 500px;
		}
		.progressBar {
			margin-top: 15px;
			width: 100%;
			border: 1px solid #999999;
			height: 15px;
			border-radius: 10px;
			overflow: hidden;
		}
		.progressBarInner {
			background-color: #29bd73;
			height: 15px;
			transition: all 0.3s;
		}
		.progressBarLabel {
			font-size: 12px;
			margin-top: 5px;
			text-align: center;
			color: rgba(0,0,0,0.5);
		}
	}

		.section:not(.waveSection) {
			.sectionInner {
				display: flex;

				padding-top: 25px;
				padding-bottom: 5px;

				.sectionTitle {
					text-transform: lowercase;
					margin-left: 6px;
				}
			}
		}


	.sectionTitle {
		color: #024699;

		font-size: 6.5vw;
	}
	.sectionSubTitle {
		color: #0263e8;
		font-size: 6.5vw;
	}
	.waveSection {
		background-color: #ffffff;

		.sectionInner {
			background-color: var(--primary-color);
			padding-top: 15px;
			padding-left: 15px;
			padding-right: 46%;
		}
		.sectionRight {
			position: absolute;
			width: 34vw;
			max-width: 200px;

			right: 15px;
			top: 15px;
		}
		.podcastCover {
			width: 100%;
			height: auto;
		}
		.sectionContentStart {
			background-color: #FFFFFF;
			background-repeat: no-repeat;
			background-size: 100%;
			min-height: calc(17vw);
			padding-top: 8vw;
			padding-left: 15px;
			background-position: 0 -3vw;
		}
		.sectionLeftColumn {
			width: calc(40vw + 9.5%);
		}
		.sectionContentTitle {
			font-size: 4.5vw;
			font-weight: bold;
			color: #02489d;
			text-decoration: none;

			display: -webkit-box;
			-webkit-line-clamp: 2;
			-webkit-box-orient: vertical;
			overflow: hidden;

			margin-top: 3px;
			margin-bottom: 5px;
		}
		.sectionContentSubTitle {
			font-size: 4vw;
			color: #909bab;
			text-decoration: none;

			display: -webkit-box;
			-webkit-line-clamp: 1;
			-webkit-box-orient: vertical;
			overflow: hidden;
		}
		.sectionTitle {
			color: #FFFFFF;
		}
		.sectionSubTitle {
			color: #c4deef;
		}
	}
	@media (min-width: 400px) {
		.waveSection {
			.sectionLeftColumn {
				width: calc(42vw + 9.5%);
			}
		}
	}
	@media (min-width: 550px) {
		.section {
			.sectionTitle {
				font-size: 28px;
			}
			.sectionSubTitle {
				font-size: 28px;
			}
			.sectionBodyContainer {
				min-height: 13vw;
			}
			&.waveSection {
				.sectionContentTitle {
					font-size: 22px;
				}
				.sectionContentSubTitle {
					font-size: 18px;
				}
			}
			.sectionRight {
				max-width: 230px;
			}
		}
		@media (max-width: 900px) {
			.section {
				.sectionLeftColumn {
					width: calc(54vw + 10px);
				}
				.sectionBody {
					font-size: 16px;
					margin-top: 15px;
				}
			}
		}
	}
	@media (min-width: 700px) and (max-width: 900px) {
		.section {
			.sectionBody {
				-webkit-line-clamp: 4;
			}
		}
	}
	@media (min-width: 900px) {
		.section {
			.sectionInner {
				padding-left: 30px;
			}
			.sectionContentStart {
				padding-left: 30px;
			}
			.sectionContentTitle {
				font-size: 2vw;
				min-height: 34px;
			}
			.sectionContentSubTitle {
				font-size: 1.5vw;
			}
			.sectionBody {
				margin-top: 0.5vw;
			}
			.sectionContentStart {
				padding-top: 5vw;
				min-height: 13vw;
				background-position: 0 -2vw;
			}
			.sectionLeftColumn {
				width: calc(50vw - 200px)
			}
			.sectionRight {
				width: calc(40vw - 200px);
			}
			@media (max-width: 1400px) {
				.sectionRight {
					width: calc(36vw - 200px);
				}
			}
		}
	}
	@media (min-width: 1100px) {
		.section {
			.sectionBodyContainer {
				min-height: 9vw;
			}
		}
	}
	@media (min-width: 1200px) {
		.section {
			.sectionContentTitle {
				font-size: 24px;
				min-height: 34px;
			}
			.sectionContentSubTitle {
				font-size: 18px;
			}
			.sectionBodyContainer {
				min-height: 11vw;
			}
			.sectionRight {
				width: calc(36vw - 200px);
				max-width: 350px;
			}
		}
	}
	@media (min-width: 1400px) {
		.section {
			.sectionBodyContainer {
				min-height: 13.5vw;
			}
		}
	}
	@media (min-width: 1500px) {
		.section.waveSection {
			.sectionInner {
				padding-right: 0;
			}
			.sectionSubTitle, .sectionTitle {
				max-width: 490px;
				position: relative;
				top: 1vw;
				left: 10%;
			}
			.sectionBodyContainer {
				min-height: 200px;
			}
			.sectionLeftColumn {
				position: relative;
				left: 10%;
				max-width: 490px;
			}
			.sectionRight {
				left: 60%;
			}
		}
	}

	.podcastGrid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(195px, 1fr));

		@media only screen and (max-width: 410px) {
			grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));
		}
		@media (min-width: 900px) {
			&.scrollList {
				padding-left: 20px;
				padding-right: 20px;
			}
		}
		@media (any-hover: none) {
			&.scrollList {
				display: flex;

				overflow-x: auto;
				overflow-y: visible;

				.podcastItem {
					max-width: 180px;
					min-width: 180px;

				}
				.loading-podcast-item {
					max-width: 180px;
					min-width: 180px;
					min-height: 180px;
					max-height: 180px;
				}
			}
		}
		.podcastItem, .loading-podcast-item {
			padding: 10px;
		
			border-radius: 5px;
			
			text-decoration: none;
		}
		.loading-podcast-item {
			margin: 10px;
			height: 180px;
		}
		.podcastItem {
			transition: all 0.5s;

			flex-direction: column;

			.cover {
				width: 100%;
				height: auto;
				display: block;
				background-size: contain;
				background-repeat: no-repeat;
				border-radius: 5px;
				box-shadow: 0px 0px 22px -11px rgba(0,0,0,0.45);
			}
			.content {
				padding: 10px;
				padding-left: 0px;
				padding-right: 0px;
			}
			.title {
				font-size: 16px;
				
				color: #1f335e;
				margin-top: 5px;
				margin-bottom: 5px;
				-webkit-text-stroke: 0.25px;
				
				transition: color 0.2s;
			
				display: -webkit-box;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;  
				overflow: hidden;
			}
			.author {
				-webkit-line-clamp: 1;
				color: #999999;
				font-size: 14px;
				overflow: hidden;
				white-space: nowrap;
				text-overflow: ellipsis;
				
				transition: color 0.2s;
			}
			.date {
				font-size: 13px;
			}
			.subscribe svg, .unsubscribe svg {
				fill: #999999;
				position: relative;
				top: 2px;
			}
			.subscribe:hover svg, .unsubscribe:hover svg {
				fill: #FF0000;
			}
			.subscribe, .unsubscribe {
				float: right;
				background-color: rgba(255,255,255,0.9);
				border: 1px solid rgba(100,100,100,0.5);
				padding: 5px;
				padding-left: 7px;
				padding-right: 7px;
				margin: 10px;
			}
			.subscribeContainer {
				display: none;
				position: absolute;
				top: 10px;
				right: 15px;
			}
		}
		@media (any-hover: hover) {
			.podcastItem:hover {
				transform: scale(1.1);
				z-index: 10;
				background-color: #0176e7;
			}
			.podcastItem:hover .title {
				color: #FFFFFF;
			}
			.podcastItem:hover .author {
				color: rgba(255,255,255,0.9);
			}
			.podcastItem:hover .date {
				color: #FFFFFF;
			}
			.podcastItem:hover .subscribeContainer {
				display: block;
			}
		}
	}


}
@media only screen and (max-width: 899px) {
	.mainArea {
		border-radius: 0px;
	}
}