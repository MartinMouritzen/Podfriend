"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs-extra");
const path = require("path");
const search_module_1 = require("./search-module");
const electronModuleNames = ['electron', 'electron-prebuilt', 'electron-prebuilt-compile'];
function locateModuleByRequire() {
    return __awaiter(this, void 0, void 0, function* () {
        for (const moduleName of electronModuleNames) {
            try {
                const modulePath = path.resolve(require.resolve(path.join(moduleName, 'package.json')), '..');
                if (yield fs.pathExists(path.join(modulePath, 'package.json'))) {
                    return modulePath;
                }
            }
            catch (_error) { // eslint-disable-line no-empty
            }
        }
        return null;
    });
}
function locateElectronModule(projectRootPath) {
    return __awaiter(this, void 0, void 0, function* () {
        for (const moduleName of electronModuleNames) {
            const electronPath = yield search_module_1.searchForModule(process.cwd(), moduleName, projectRootPath)[0];
            if (electronPath && (yield fs.pathExists(path.join(electronPath, 'package.json')))) {
                return electronPath;
            }
        }
        return locateModuleByRequire();
    });
}
exports.locateElectronModule = locateElectronModule;
//# sourceMappingURL=electron-locator.js.map