{"version":3,"sources":["../src/AppAdapter.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;;AA8BM,SAAU,cAAV,GAAwB;AAC5B,QAAM,OAAO,GAAG,OAAO,CAAC,IAAD,CAAP,CAAc,OAAd,EAAhB,CAD4B,CAE5B;;;AACA,MAAI,MAAJ;;AACA,MAAI,OAAO,CAAC,QAAR,KAAqB,OAAzB,EAAkC;AAChC,IAAA,MAAM,GAAG,OAAO,CAAC,GAAR,CAAY,YAAZ,IAA4B,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,SAAnB,EAA8B,OAA9B,CAArC;AACD,GAFD,MAGK,IAAI,OAAO,CAAC,QAAR,KAAqB,QAAzB,EAAmC;AACtC,IAAA,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,SAAnB,EAA8B,qBAA9B,EAAqD,QAArD,CAAT;AACD,GAFI,MAGA;AACH,IAAA,MAAM,GAAG,OAAO,CAAC,GAAR,CAAY,cAAZ,IAA8B,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,QAAnB,CAAvC;AACD;;AACD,SAAO,MAAP;AACD,C","sourcesContent":["import * as path from \"path\"\n\nexport interface AppAdapter {\n  readonly version: string\n  readonly name: string\n\n  readonly isPackaged: boolean\n\n  /**\n   * Path to update metadata file.\n   */\n  readonly appUpdateConfigPath: string\n\n  /**\n   * Path to user data directory.\n   */\n  readonly userDataPath: string\n\n  /**\n   * Path to cache directory.\n   */\n  readonly baseCachePath: string\n\n  whenReady(): Promise<void>\n\n  quit(): void\n\n  onQuit(handler: (exitCode: number) => void): void\n}\n\nexport function getAppCacheDir() {\n  const homedir = require(\"os\").homedir()\n  // https://github.com/electron/electron/issues/1404#issuecomment-194391247\n  let result: string\n  if (process.platform === \"win32\") {\n    result = process.env.LOCALAPPDATA || path.join(homedir, \"AppData\", \"Local\")\n  }\n  else if (process.platform === \"darwin\") {\n    result = path.join(homedir, \"Library\", \"Application Support\", \"Caches\")\n  }\n  else {\n    result = process.env.XDG_CACHE_HOME || path.join(homedir, \".cache\")\n  }\n  return result\n}"],"sourceRoot":""}
