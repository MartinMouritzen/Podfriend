{"version":3,"sources":["../src/ElectronAppAdapter.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEM,MAAO,kBAAP,CAAyB;AAC7B,EAAA,WAAA,CAA6B,GAAA,GAAM,OAAO,CAAC,UAAD,CAAP,CAAoB,GAAvD,EAA0D;AAA7B,SAAA,GAAA,GAAA,GAAA;AAC5B;;AAED,EAAA,SAAS,GAAA;AACP,WAAO,KAAK,GAAL,CAAS,SAAT,EAAP;AACD;;AAED,MAAI,OAAJ,GAAW;AACT,WAAO,KAAK,GAAL,CAAS,UAAT,EAAP;AACD;;AAED,MAAI,IAAJ,GAAQ;AACN,WAAO,KAAK,GAAL,CAAS,OAAT,EAAP;AACD;;AAED,MAAI,UAAJ,GAAc;AACZ,WAAO,KAAK,GAAL,CAAS,UAAT,KAAwB,IAA/B;AACD;;AAED,MAAI,mBAAJ,GAAuB;AACrB,WAAO,KAAK,UAAL,GAAkB,IAAI,CAAC,IAAL,CAAU,OAAO,CAAC,aAAlB,EAAmC,gBAAnC,CAAlB,GAAyE,IAAI,CAAC,IAAL,CAAU,KAAK,GAAL,CAAS,UAAT,EAAV,EAAiC,oBAAjC,CAAhF;AACD;;AAED,MAAI,YAAJ,GAAgB;AACd,WAAO,KAAK,GAAL,CAAS,OAAT,CAAiB,UAAjB,CAAP;AACD;;AAED,MAAI,aAAJ,GAAiB;AACf,WAAO,mCAAP;AACD;;AAED,EAAA,IAAI,GAAA;AACF,SAAK,GAAL,CAAS,IAAT;AACD;;AAED,EAAA,MAAM,CAAC,OAAD,EAAoC;AACxC,SAAK,GAAL,CAAS,IAAT,CAAc,MAAd,EAAsB,CAAC,CAAD,EAAW,QAAX,KAAgC,OAAO,CAAC,QAAD,CAA7D;AACD;;AAtC4B,C","sourcesContent":["import * as path from \"path\"\nimport { AppAdapter, getAppCacheDir } from \"./AppAdapter\"\n\nexport class ElectronAppAdapter implements AppAdapter {\n  constructor(private readonly app = require(\"electron\").app) {\n  }\n\n  whenReady(): Promise<void> {\n    return this.app.whenReady()\n  }\n\n  get version(): string {\n    return this.app.getVersion()\n  }\n\n  get name(): string {\n    return this.app.getName()\n  }\n\n  get isPackaged(): boolean {\n    return this.app.isPackaged === true\n  }\n\n  get appUpdateConfigPath(): string {\n    return this.isPackaged ? path.join(process.resourcesPath!!, \"app-update.yml\") : path.join(this.app.getAppPath(), \"dev-app-update.yml\")\n  }\n\n  get userDataPath(): string {\n    return this.app.getPath(\"userData\")\n  }\n\n  get baseCachePath(): string {\n    return getAppCacheDir()\n  }\n\n  quit(): void {\n    this.app.quit()\n  }\n\n  onQuit(handler: (exitCode: number) => void): void {\n    this.app.once(\"quit\", (_: Event, exitCode: number) => handler(exitCode))\n  }\n}"],"sourceRoot":""}
