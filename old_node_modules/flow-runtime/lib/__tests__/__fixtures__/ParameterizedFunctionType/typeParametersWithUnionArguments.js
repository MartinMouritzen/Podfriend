

export function pass(t) {
  function fn() {
    var T = t.typeParameter("T");

    var _argsType = t.array(t.flowInto(T));

    var _returnType = t.return(t.array(T));

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    t.rest("args", _argsType).assert(args);
    return _returnType.assert(args);
  }

  return fn(1, true, 'yep');
}

export function fail(t) {
  function fn() {
    var T = t.typeParameter("T");

    var _argsType = t.array(t.flowInto(T));

    var _returnType = t.return(t.array(T));

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    t.rest("args", _argsType).assert(args);
    return _returnType.assert([true]);
  }

  return fn(1, 'yep');
}